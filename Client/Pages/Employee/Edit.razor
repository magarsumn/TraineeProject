@page "/employee/edit/{employeeId:int}"
@using HRApp.Shared.Entities
@inject HttpClient http
@inject NavigationManager uriHelper
@inject IJSRuntime js


   <h3>Edit Employee</h3>
    <MuForm class="d-flex">
        <MudGrid>
            <MudItem xs="12" sm="6" >
                <MudTextField Margin="Margin.Dense"style="height:41px" @bind-Value="employees.Name" For="@(() => employees.Name)" Label="Name" Variant="Variant.Outlined"></MudTextField>
            </MudItem>
            <MudItem xs="6" sm="3">
                <MudSelect Margin="Margin.Dense" T="int" @bind-Value="employees.DepartmentId" Label="Department" Variant="Variant.Outlined">
                    @foreach (var item in departments)
                    {
                        <MudSelectItem Value="@item.Id">@item.Name</MudSelectItem>
                    }
                </MudSelect>
            </MudItem>
            <MudItem xs="6" sm="3">
                <MudSelect Margin="Margin.Dense" T="int" @bind-Value="employees.DesignationId" Label="Designation" Variant="Variant.Outlined">
                    @foreach(var item in designations)
                    {
                        <MudSelectItem Value="@item.Id">@item.Name</MudSelectItem>
                    }
                </MudSelect>
            </MudItem>
            <MudItem xs="12" sm="6" >
                <MudTextField Margin="Margin.Dense"style="height:41px" @bind-Value="employees.Address" For="@(() => employees.Address)" Label="Address" Variant="Variant.Outlined"></MudTextField>
            </MudItem>
            <MudItem xs="6" sm="3">
                <MudSelect Margin="Margin.Dense"  @bind-Value="employees.Gender" For="@(() => employees.Gender)" Label="Gender" Variant="Variant.Outlined">
                    @foreach(var item in Enum.GetValues(typeof(Sex)))
                    {
                        <MudSelectItem Value="@item">@item.ToString()</MudSelectItem>
                    }
                </MudSelect>
            </MudItem>
            <MudItem xs="6" sm="3">
                <MudDatePicker Label="Hire Date" Editable="true" @bind-Date="employees.HireDate" Placeholder="Select Date" Variant="Variant.Outlined"/>
            </MudItem>
            <MudItem  xs="12" sm="6" >
                <MudTextField Margin="Margin.Dense"  style="height:41px" @bind-Value="employees.Email" For="@(() => employees.Email)" Label="Email" Variant="Variant.Outlined"></MudTextField>
            </MudItem>
            <MudItem  xs="6" sm="3" >
                <MudTextField Margin="Margin.Dense"  style="height:41px" T="string" @bind-Value="employees.Phone" For="@(() => employees.Phone)" Label="Phone" Variant="Variant.Outlined"></MudTextField>
            </MudItem>
            <MudItem  xs="6" sm="3" >
                <MudTextField Margin="Margin.Dense"  style="height:41px" T="decimal" @bind-Value="employees.Salary" For="@(() => employees.Salary)" Label="Salary" Variant="Variant.Outlined"></MudTextField>
            </MudItem>
        </MudGrid>
    </MuForm>
    <div class="d-flex justify-space-between my-3 ">
        <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" OnClick="EditEmployee">Update</MudButton>
    </div>



@code {
    
    bool success;
    [Parameter] public int employeeId { get; set; }
    List<Department> departments = new();
    List<Designation> designations = new();
    Employees employees = new Employees();
    protected async override Task OnParametersSetAsync()
    {
        employees = await http.GetFromJsonAsync<Employees>($"api/employees/{employeeId}");
        departments = await http.GetFromJsonAsync<List<Department>>("api/department");
        designations = await http.GetFromJsonAsync<List<Designation>>("api/designation");
    }
    async Task EditEmployee()
    {
        await http.PutAsJsonAsync("api/employees", employees);
        await js.InvokeVoidAsync("alert", $"Updated Successfully!");
        uriHelper.NavigateTo("employee");
    }
    
    private void OnValidSubmit(EditContext context)
    {
        success = true;
        StateHasChanged();
    }

}
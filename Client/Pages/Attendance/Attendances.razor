@page "/attendance"
@using HRApp.Shared.Entities
@inject HttpClient client
@inject NavigationManager uriHelper
@inject IJSRuntime js

<h3>Departments</h3>
<MudButton Variant="Variant.Outlined" Color="Color.Primary" Link="/attendance/create" >Create</MudButton>
<br />
<br />
<MudTable Items="@attendences.Take(10)" Hover="true" Breakpoint="Breakpoint.Sm" Loading="@_loading" LoadingProgressColor="Color.Info">
    <HeaderContent>
        <MudTh>Date </MudTh>
        <MudTh>Name </MudTh>
        <MudTh>Status </MudTh>
        <MudTh>Remarks </MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Name">@context.Date</MudTd>
        <MudTd DataLabel="Name">@context.EmployeeId</MudTd>
        <MudTd DataLabel="Name">@context.Status</MudTd>
        <MudTd DataLabel="Name">@context.Remarks</MudTd>
        <MudTd DataLabel="" Class="justify-end">
            <MudFab @onclick="@(()=>Edit(@context.Id))" Color="Color.Primary" Icon="@Icons.Material.Filled.Edit" Size="Size.Small" IconSize="Size.Small" />
            <MudFab @onclick="@(()=>Delete(@context.Id))" Color="Color.Secondary" Icon="@Icons.Material.Filled.Delete" Size="Size.Small" IconSize="Size.Small" />

        </MudTd>
    </RowTemplate>
</MudTable>

<MudSwitch @bind-Checked="_hidePosition">Hide <b>position</b> when Breakpoint=Xs</MudSwitch>
<MudSwitch @bind-Checked="_loading">Show Loading</MudSwitch>
@code { 
    private bool _hidePosition;
    private bool _loading;
    private Attendence attendence = new();
    private IEnumerable<Attendence> attendences = new List<Attendence>();

    protected override async Task OnInitializedAsync()
    {
        attendences = await client.GetFromJsonAsync<List<Attendence>>("api/Attendence");
    }
    
    async Task Delete(int userId)
    {
        
        var dep = attendences.First(x => x.Id == userId);
        if (await js.InvokeAsync<bool>("confirm", $"Do you want to delete Record?"))
        {
            await client.DeleteAsync($"api/Attendence/{userId}");
            uriHelper.NavigateTo("attendance");
            await OnInitializedAsync();
        }
    }

     void Edit(int userId)
    {
        uriHelper.NavigateTo($"attendance/edit/{userId}");
    }
}
